name: Bibbi

on:
  push:
    branches:
      - develop
      - feat/*
      - fix/*
    tags:
      - "v*"
  
jobs:  
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        xcodebuild-scheme: ['App']
        
    steps:
      - uses: actions/checkout@v3
      - uses: jdx/mise-action@v2
    
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
            xcode-version: latest
            
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Bring Bibbi ignored file with Config
        uses: actions/checkout@v3
        with: 
          repository: depromeet/14th-team5-iOS-ignored
          path: depromeet/14th-team5-iOS/14th-team5-iOS/XCConfig
          token: ${{secrets.ACTION_TOKEN}}

      - name: Setting Master Key
        run: | 
          echo "${{secrets.MASTER_KEY}}" >> Tuist/master.key
        
      - name: Install Tuist CLI
        run: bash <(curl -Ls https://install.tuist.io)
        
      - name: Install FastLane 
        run: gem install fastlane -v 2.219.0

      - name: Tuist Clean Command
        run: tuist clean
        
      - name: Tuist Siging Decrept
        run: tuist signing decrypt

      - name: fastlane certification
        env:
          KEYCHAIN_NAME: ${{secrets.KEYCHAIN_NAME}}
          BUILD_CERTIFICATE_BASE64_PRD: ${{secrets.BUILD_CERTIFICATE_BASE64_PRD}}
          APP_NAME: ${{secrets.APP_NAME}}
          WIDGET_NAME: ${{secrets.WIDGET_NAME}}
        run: fastlane setup_keychain
      
      # - name: Xcode Certification Install
      #   env:
      #     BUILD_CERTIFICATE_BASE64_DEV: ${{ secrets.BUILD_CERTIFICATE_BASE64_DEV }}
      #     BUILD_CERTIFICATE_BASE64_PRD: ${{ secrets.BUILD_CERTIFICATE_BASE64_PRD }}
      #     BUILD_PROVISION_PROFILE_BASE64_PRD: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64_PRD }}
      #     KEYCHAIN_NAME: ${{secrets.KEYCHAIN_NAME}}
      #     KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}

      #   run: |
      #     echo "$(ls Tuist/Signing/)"
      #     security create-keychain -p "${BUILD_CERTIFICATE_BASE64_PRD}" "${KEYCHAIN_NAME}.keychain"
      #     security list-keychains -s "${KEYCHAIN_NAME}.keychain"
      #     security default-keychain -s "${KEYCHAIN_NAME}.keychain"
      #     security unlock-keychain -p "${BUILD_CERTIFICATE_BASE64_PRD}" "${KEYCHAIN_NAME}.keychain"
      #     security set-keychain-settings -lut 1200
      #     security list-keychains

      #     set -e

      #     echo "Importing prd.p12 to keychain"
      #     echo "Setting key partition list"
      #     << openssl pkcs12 -in prd.p12 -legacy -nodes
      #     security import "Tuist/Signing/prd.p12" -k "${KEYCHAIN_NAME}.keychain" -P "CERTIFICATION_PASSWORD" -T /usr/bin/codesign
      #     security set-key-partition-list -S apple-tool:,apple: -s -k "" "${KEYCHAIN_NAME}.keychain"
      #     echo '$(ls Tuist/Signing/)'
      #     PROVISIONING_PROFILES_FOLDER="$(ls Tuist/Signing/*.mobileprovision)"
      #     mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      #     for PROVISION in PROVISIONING_PROFILES_FOLDER
      #     do
      #       UUID=$(/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ./$PROVISION))
      #       cp "./$PROVISION" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"
      #     done


      - name: Tuist generate Command      
        run: tuist generate
                  
      - run: fastlane upload_stg_to_testflight
        env:
          KEYCHAIN_NAME: ${{secrets.KEYCHAIN_NAME}}
          KEYCHAIN_PASSWORD: ${{secrets.KEYCHAIN_PASSWORD}}
          TEAM_ID: ${{secrets.TEAM_ID}}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
          SLACK_HOOK_URL: ${{ secrets.SLACK_HOOK_URL }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.2.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
